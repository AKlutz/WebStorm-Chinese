java.terms.anonymous.class=\u533f\u540d\u985e\u5225
java.terms.class=\u985e\u5225
java.terms.package=\u5305
java.terms.type.parameter=\u985e\u578b\u53c3\u6578
java.terms.method=\u65b9\u6cd5
java.terms.field=\u57df
java.terms.parameter=\u53c3\u6578
java.terms.variable=\u8b8a\u6578
java.terms.interface=\u4ecb\u9762
java.terms.exception=\u7570\u5e38
java.terms.static.initializer=\u975c\u614b\u521d\u59cb\u503c\u8a2d\u5b9a
java.terms.instance.initializer=\u5be6\u4f8b\u521d\u59cb\u5316
java.terms.enum=\u679a\u8209
java.terms.annotation.interface=@\u4ecb\u9762
java.terms.label=\u6a19\u7c64
java.terms.constructor=\u69cb\u9020\u51fd\u6578
terms.directory=\u76ee\u9304
terms.file=\u6a94\u6848
java.terms.of.anonymous.class={0}\u7684\u533f\u540d\u985e\u5225
java.terms.of.interface={0}\u7684\u4ecb\u9762{1}
java.terms.of.enum={0}\u7684\u5217\u8209{1}
java.terms.of.annotation.type={0}\u7684\u8a3b\u89e3\u985e\u578b{1}
java.terms.of.class={0}\u7684\u985e\u5225{1}
java.terms.variable.of.method={0} of {1}
java.terms.expression=\u904b\u7b97\u5f0f
terms.property=\u7279\u6027
unexpected.token=\u7570\u5e38\u6a19\u8a18
unexpected.eof=\u610f\u5916\u6a94\u6848\u7d50\u5c3e

completion.no.suggestions=\u6c92\u6709\u5efa\u8b70
completion.quick.javadoc.ad=Did you know that Quick Documentation View ({0}) works in completion lookups as well?
completion.quick.implementations.ad=Did you know that Quick Definition View ({0}) works in completion lookups as well?
completion.dot.etc.ad=Dot, space and some other keys will also close this lookup and be inserted into editor
completion.smart.enter.ad=Use {0} to syntactically correct your code after completing (balance parentheses etc.)

xml.terms.tag=\u6a19\u7c64
xml.terms.entity=\u5be6\u9ad4
xml.terms.xml.tag=XML\u6a19\u7c64
xml.terms.attribute=\u5c6c\u6027
xml.terms.attribute.value=\u5c6c\u6027\u503c
xml.terms.variable=\u8b8a\u6578
error.cannot.resolve=\u7121\u6cd5\u5256\u6790
dialog.template.data.language.caption=<html><body>Template data languages are the underlying languages in template files like those of FreeMarker/Velocity frameworks.<br>To change template data language settings {0} uses for a file, directory, or an entire project, click an item and then select a language from the Template Data Language list.<br><br>Note:<br>If not specified, files and directories inherit Template Data Language settings from parent.<br></body></html>
template.data.language.configurable=\u7bc4\u672c\u8cc7\u6599\u8a9e\u8a00
template.data.language.configurable.tree.table.title=\u7bc4\u672c\u8cc7\u6599\u7684\u8a9e\u8a00
template.data.language.override.warning.text=\u5728\u5b50\u76ee\u9304\u4e2d\u6709\u6307\u5b9a\u8a9e\u8a00\u7684\u7bc4\u672c\u8cc7\u6599\uff0c\u78ba\u5b9a\u8981\u8986\u5beb\u55ce\uff1f
template.data.language.override.warning.title=\u8986\u5beb\u5b50\u76ee\u9304\u7684\u7bc4\u672c\u8cc7\u6599\u8a9e\u8a00
quickfix.change.template.data.language.text=\u8b8a\u66f4{0}\u7bc4\u672c\u8cc7\u6599\u7684\u8a9e\u8a00...
incorrect.name=\u4e0d\u6b63\u78ba\u7684\u540d\u7a31

jrt.node.short=[JRT]
jrt.node.long=[Java Run-time Modules]
jrt.not.available.message=You need to run IDEA on Java 8 to be able to use modular JDK. Sorry.
jrt.not.available.title=Unsupported JDK ''{0}'' detected

compound.run.configuration.cycle={0} ''{1}'' causes dependency cycle and cannot be added
